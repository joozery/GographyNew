import React, { useEffect, useState } from "react";

const API_BASE_URL = "https://servergogo-app-209f1146e735.herokuapp.com/api";

const TourDetailsSection = ({ tourData, handleChange, requirefield }) => {
  const [countries, setCountries] = useState([]);

  // ‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®‡∏à‡∏≤‡∏Å API
  useEffect(() => {
    const fetchCountries = async () => {
      try {
        const response = await fetch(`${API_BASE_URL}/countries`);
        if (!response.ok) throw new Error("‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß");
        const data = await response.json();
        
        console.log("üåç Countries API Response:", data); // ‚úÖ Debug API Response
        
        if (!Array.isArray(data)) throw new Error("‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà Array");
        setCountries(data);
      } catch (error) {
        console.error("‚ùå Error fetching countries:", error);
      }
    };
  
    fetchCountries();
  }, []);

  return (
    <div className="grid grid-cols-3 gap-4 mb-6">
      {/* ‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏±‡∏ß‡∏£‡πå */}
      <div>
        <label>‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏±‡∏ß‡∏£‡πå {requirefield}</label>
        <input
          type="text"
          name="tour_name"
          value={tourData.tour_name || ""}
          onChange={handleChange}
          className="border p-2 rounded w-full"
          required
        />
      </div>

      {/* ‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏® (‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢) */}
      <div>
        <label>‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏® (TH) {requirefield}</label>
        <input
          type="text"
          name="country_th"
          value={tourData.country_th || ""}
          onChange={handleChange}
          className="border p-2 rounded w-full"
          required
        />
      </div>

      {/* ‚úÖ ‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏® (EN) ‡∏î‡∏∂‡∏á‡∏à‡∏≤‡∏Å API */}
      <div>
        <label>‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏® (EN)</label>
        <select
          name="country_en"
          value={tourData.country_en || ""}
          onChange={handleChange}
          className="border p-2 rounded w-full"
        >
          <option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®</option>
          {countries.map((country) => (
            <option key={country.code} value={country.name_en}>
              {country.name_en}
            </option>
          ))}
        </select>
      </div>

      {/* ‡πÑ‡∏Æ‡πÑ‡∏•‡∏ó‡πå‡∏Ç‡∏≠‡∏á‡∏ó‡∏£‡∏¥‡∏õ */}
      <div>
        <label>‡πÑ‡∏Æ‡πÑ‡∏•‡∏ó‡πå</label>
        <input
          type="text"
          name="highlight"
          value={tourData.highlight || ""}
          onChange={handleChange}
          className="border p-2 rounded w-full"
        />
      </div>

      {/* ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏±‡∏ß‡∏£‡πå */}
      <div>
        <label>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á</label>
        <input
          type="date"
          name="start_date"
          value={tourData.start_date || ""}
          onChange={handleChange}
          className="border p-2 rounded w-full"
        />
      </div>

      {/* ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î‡∏ó‡∏±‡∏ß‡∏£‡πå */}
      <div>
        <label>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á</label>
        <input
          type="date"
          name="end_date"
          value={tourData.end_date || ""}
          onChange={handleChange}
          className="border p-2 rounded w-full"
        />
      </div>

      {/* ‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏Ç‡∏≠‡∏á‡∏ó‡∏£‡∏¥‡∏õ */}
      <div>
        <label>‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤</label>
        <input
          type="text"
          name="duration"
          value={tourData.duration || ""}
          onChange={handleChange}
          className="border p-2 rounded w-full"
          placeholder="‡πÄ‡∏ä‡πà‡∏ô 7 ‡∏ß‡∏±‡∏ô / 5 ‡∏Ñ‡∏∑‡∏ô"
        />
      </div>

      {/* ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á */}
      <div>
        <label>‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á</label>
        <input
          type="text"
          name="travel_type"
          value={tourData.travel_type || ""}
          onChange={handleChange}
          className="border p-2 rounded w-full"
          placeholder="‡πÄ‡∏ä‡πà‡∏ô ‡∏ó‡∏±‡∏ß‡∏£‡πå‡πÅ‡∏ö‡∏ö‡∏Å‡∏•‡∏∏‡πà‡∏° (15)"
        />
      </div>

      {/* ‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏µ‡πà‡∏£‡∏ß‡∏°‡πÉ‡∏ô‡∏ó‡∏±‡∏ß‡∏£‡πå */}
      <div>
        <label>‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ô‡∏ó‡∏±‡∏ß‡∏£‡πå (‡∏Ñ‡∏±‡πà‡∏ô‡∏î‡πâ‡∏ß‡∏¢ `,`)</label>
        <input
          type="text"
          name="locations"
          value={(tourData.locations || []).join(", ")}
          onChange={(e) =>
            handleChange({
              target: {
                name: "locations",
                value: e.target.value.split(",").map((loc) => loc.trim()),
              },
            })
          }
          className="border p-2 rounded w-full"
          placeholder="Lofoten, Senja, Tromso"
        />
      </div>

      {/* ‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏£‡∏ß‡∏°‡πÉ‡∏ô‡∏ó‡∏±‡∏ß‡∏£‡πå */}
      <div>
        <label>‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏£‡∏ß‡∏°</label>
        <input
          type="text"
          name="included"
          value={tourData.included || ""}
          onChange={handleChange}
          className="border p-2 rounded w-full"
          placeholder="‡∏£‡∏ß‡∏°‡∏ï‡∏±‡πã‡∏ß‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ö‡∏¥‡∏ô, ‡∏ó‡∏µ‡πà‡∏û‡∏±‡∏Å, ‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÄ‡∏ä‡πâ‡∏≤"
        />
      </div>

      {/* ‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏£‡∏ß‡∏°‡πÉ‡∏ô‡∏ó‡∏±‡∏ß‡∏£‡πå */}
      <div>
        <label>‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏£‡∏ß‡∏°</label>
        <input
          type="text"
          name="not_included"
          value={tourData.not_included || ""}
          onChange={handleChange}
          className="border p-2 rounded w-full"
          placeholder="‡πÑ‡∏°‡πà‡∏£‡∏ß‡∏°‡∏ó‡∏¥‡∏õ‡πÑ‡∏Å‡∏î‡πå, ‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß"
        />
      </div>

      {/* ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏π‡∏õ‡∏õ‡∏Å‡∏ó‡∏±‡∏ß‡∏£‡πå */}
      <div>
        <label>‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏π‡∏õ‡∏õ‡∏Å‡∏ó‡∏±‡∏ß‡∏£‡πå</label>
        <input
          type="file"
          name="cover_image"
          accept="image/*"
          onChange={handleChange}
          className="border p-2 rounded w-full"
        />
      </div>

      {/* ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏ü‡∏•‡πå PDF */}
      <div>
        <label>‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏ü‡∏•‡πå PDF</label>
        <input
          type="file"
          name="pdf_file"
          accept=".pdf"
          onChange={handleChange}
          className="border p-2 rounded w-full"
        />
      </div>
    </div>
  );
};

export default TourDetailsSection;